# Generated by Django 5.0 on 2025-10-19 16:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tenants', '0002_tenant_currency_tenant_currency_position_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name='tenant',
            name='tenants_slug_3181c2_idx',
        ),
        migrations.RemoveIndex(
            model_name='tenant',
            name='tenants_subscri_f58e68_idx',
        ),
        migrations.RemoveIndex(
            model_name='tenant',
            name='tenants_is_acti_ec1713_idx',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='business_address',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='business_email',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='business_phone',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='max_customers',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='max_storage_gb',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='max_users',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='subscription_ends_at',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='subscription_starts_at',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='subscription_status',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='trial_ends_at',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='website',
        ),
        migrations.RemoveField(
            model_name='tenantsettings',
            name='custom_fields',
        ),
        migrations.RemoveField(
            model_name='tenantsettings',
            name='enable_push_notifications',
        ),
        migrations.RemoveField(
            model_name='tenantsettings',
            name='id',
        ),
        migrations.RemoveField(
            model_name='tenantsettings',
            name='loyalty_points_enabled',
        ),
        migrations.AddField(
            model_name='tenantsettings',
            name='enable_loyalty_points',
            field=models.BooleanField(default=True, help_text='Enable loyalty points system'),
        ),
        migrations.AddField(
            model_name='tenantsettings',
            name='max_customers',
            field=models.IntegerField(default=1000, help_text='Maximum number of customers allowed'),
        ),
        migrations.AddField(
            model_name='tenantsettings',
            name='max_staff_members',
            field=models.IntegerField(default=10, help_text='Maximum number of staff members'),
        ),
        migrations.AddField(
            model_name='tenantsettings',
            name='points_per_dollar',
            field=models.DecimalField(decimal_places=2, default=1.0, help_text='Points earned per dollar spent', max_digits=5),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='currency',
            field=models.CharField(choices=[('USD', 'US Dollar ($)'), ('CAD', 'Canadian Dollar (C$)'), ('GBP', 'British Pound (£)'), ('EUR', 'Euro (€)'), ('AUD', 'Australian Dollar (A$)'), ('NGN', 'Nigerian Naira (₦)'), ('ZAR', 'South African Rand (R)'), ('KES', 'Kenyan Shilling (KSh)'), ('GHS', 'Ghanaian Cedi (GH₵)'), ('UGX', 'Ugandan Shilling (USh)'), ('TZS', 'Tanzanian Shilling (TSh)'), ('EGP', 'Egyptian Pound (E£)'), ('MAD', 'Moroccan Dirham (DH)'), ('JPY', 'Japanese Yen (¥)'), ('CNY', 'Chinese Yuan (¥)'), ('INR', 'Indian Rupee (₹)'), ('CHF', 'Swiss Franc (CHF)')], default='USD', help_text='Currency for this business', max_length=3),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='currency_position',
            field=models.CharField(choices=[('before', 'Before amount ($100)'), ('after', 'After amount (100$)')], default='before', help_text='Where to display currency symbol', max_length=10),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='currency_symbol',
            field=models.CharField(default='$', help_text='Currency symbol to display (e.g., $, £, ₦, €)', max_length=10),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='decimal_places',
            field=models.IntegerField(default=2, help_text='Number of decimal places for currency'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this business is active'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='logo',
            field=models.ImageField(blank=True, help_text='Business logo', null=True, upload_to='tenant_logos/'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='owner',
            field=models.ForeignKey(help_text='Business owner', on_delete=django.db.models.deletion.CASCADE, related_name='owned_tenants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='primary_color',
            field=models.CharField(default='#228B22', help_text='Hex color code for primary brand color (e.g., #228B22)', max_length=7),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='slug',
            field=models.SlugField(help_text='URL-friendly name for subdomain (e.g., "simifood" for simifood.localhost:8000)', unique=True, validators=[django.core.validators.RegexValidator(message='Slug can only contain lowercase letters, numbers, and hyphens', regex='^[a-z0-9-]+$')]),
        ),
        migrations.AlterField(
            model_name='tenantsettings',
            name='allow_customer_registration',
            field=models.BooleanField(default=True, help_text='Allow customers to self-register'),
        ),
        migrations.AlterField(
            model_name='tenantsettings',
            name='business_hours',
            field=models.JSONField(blank=True, default=dict, help_text='Business operating hours'),
        ),
        migrations.AlterField(
            model_name='tenantsettings',
            name='require_email_verification',
            field=models.BooleanField(default=False, help_text='Require email verification for new customers'),
        ),
        migrations.AlterField(
            model_name='tenantsettings',
            name='tenant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='settings', serialize=False, to='tenants.tenant'),
        ),
        migrations.AlterModelTable(
            name='tenant',
            table=None,
        ),
        migrations.AlterModelTable(
            name='tenantsettings',
            table=None,
        ),
    ]
