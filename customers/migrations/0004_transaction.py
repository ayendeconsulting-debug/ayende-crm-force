# Generated by Django 5.0 on 2025-10-17 15:13

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0003_tenantcustomer_last_purchase_date_and_more'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('refund', 'Refund'), ('adjustment', 'Points Adjustment')], default='purchase', max_length=20)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax amount', max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, help_text='Total amount (amount + tax)', max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('mobile', 'Mobile Payment'), ('other', 'Other')], default='cash', max_length=20)),
                ('points_earned', models.IntegerField(default=0, help_text='Loyalty points earned from this transaction')),
                ('points_redeemed', models.IntegerField(default=0, help_text='Loyalty points used in this transaction')),
                ('transaction_id', models.CharField(blank=True, help_text='Unique transaction identifier', max_length=100, unique=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50)),
                ('items_description', models.TextField(blank=True, help_text='Brief description of items purchased')),
                ('notes', models.TextField(blank=True)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
                ('processed_by', models.ForeignKey(blank=True, help_text='Staff member who processed this transaction', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_transactions', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='tenants.tenant')),
                ('tenant_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='customers.tenantcustomer')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transactions',
                'ordering': ['-transaction_date'],
                'indexes': [models.Index(fields=['tenant', 'customer', '-transaction_date'], name='transaction_tenant__c332f3_idx'), models.Index(fields=['tenant', '-transaction_date'], name='transaction_tenant__c79009_idx'), models.Index(fields=['transaction_id'], name='transaction_transac_5011c8_idx'), models.Index(fields=['status'], name='transaction_status_505a2f_idx')],
            },
        ),
    ]
