# Generated by Django 5.0 on 2025-10-21 02:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('refund', 'Refund'), ('adjustment', 'Points Adjustment')], default='purchase', max_length=20)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax amount', max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, help_text='Total amount (amount + tax)', max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('mobile', 'Mobile Payment'), ('other', 'Other')], default='cash', max_length=20)),
                ('points_earned', models.IntegerField(default=0, help_text='Loyalty points earned from this transaction')),
                ('points_redeemed', models.IntegerField(default=0, help_text='Loyalty points used in this transaction')),
                ('transaction_id', models.CharField(blank=True, help_text='Unique transaction identifier', max_length=100, unique=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50)),
                ('items_description', models.TextField(blank=True, help_text='Brief description of items purchased')),
                ('notes', models.TextField(blank=True)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transactions',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='customer_profiles/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, default='Canada', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='en', max_length=10)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customers',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='TenantCustomer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Administrator'), ('manager', 'Manager'), ('staff', 'Staff'), ('customer', 'Customer')], default='customer', max_length=20)),
                ('loyalty_points', models.IntegerField(default=0)),
                ('total_purchases', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('last_purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_count', models.IntegerField(default=0)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('push_notifications', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this customer')),
                ('tags', models.JSONField(blank=True, default=list, help_text="Tags for customer segmentation (e.g., ['vip', 'frequent'])")),
                ('is_active', models.BooleanField(default=True)),
                ('is_vip', models.BooleanField(default=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_purchase_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_relationships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tenant-Customer Relationship',
                'verbose_name_plural': 'Tenant-Customer Relationships',
                'db_table': 'tenant_customers',
                'ordering': ['-joined_at'],
            },
        ),
    ]
